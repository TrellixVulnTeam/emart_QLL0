{"remainingRequest":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\pc\\vue\\e-metro\\src\\components\\BaseDropdown.vue?vue&type=style&index=0&id=7445dd9c&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\pc\\vue\\e-metro\\src\\components\\BaseDropdown.vue","mtime":1614941550000},{"path":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5kcm9wZG93biB7CiAgY3Vyc29yOiBwb2ludGVyOwogIHVzZXItc2VsZWN0OiBub25lOwp9Cg=="},{"version":3,"sources":["C:\\Users\\pc\\vue\\e-metro\\src\\components\\BaseDropdown.vue"],"names":[],"mappings":";AAmGA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACnB","file":"C:/Users/pc/vue/e-metro/src/components/BaseDropdown.vue","sourceRoot":"","sourcesContent":["<template>\n  <component\n    :is=\"tag\"\n    :class=\"[`drop${direction}`]\"\n    @click=\"toggleDropDown\"\n    v-click-outside=\"closeDropDown\"\n  >\n    <slot name=\"title-container\" :is-open=\"isOpen\">\n      <component\n        :is=\"titleTag\"\n        class=\"btn-rotate\"\n        :class=\"[{ 'dropdown-toggle': hasToggle }, titleClasses]\"\n      >\n        <slot name=\"title\" :is-open=\"isOpen\">\n          <i :class=\"icon\"></i> {{ title }}\n        </slot>\n      </component>\n    </slot>\n    <ul\n      class=\"dropdown-menu\"\n      :class=\"[\n        { show: isOpen },\n        { 'dropdown-menu-right': menuOnRight },\n        menuClasses,\n      ]\"\n    >\n      <slot></slot>\n    </ul>\n  </component>\n</template>\n<script>\nexport default {\n  name: \"base-dropdown\",\n  props: {\n    tag: {\n      type: String,\n      default: \"div\",\n      description: \"Dropdown html tag (e.g div, ul etc)\",\n    },\n    titleTag: {\n      type: String,\n      default: \"button\",\n      description: \"Dropdown title (toggle) html tag\",\n    },\n    title: {\n      type: String,\n      description: \"Dropdown title\",\n    },\n    direction: {\n      type: String,\n      default: \"down\", // up | down\n      description: \"Dropdown menu direction (up|down)\",\n    },\n    icon: {\n      type: String,\n      description: \"Dropdown icon\",\n    },\n    titleClasses: {\n      type: [String, Object, Array],\n      description: \"Title css classes\",\n    },\n    menuClasses: {\n      type: [String, Object],\n      description: \"Menu css classes\",\n    },\n    menuOnRight: {\n      type: Boolean,\n      description: \"Whether menu should appear on the right\",\n    },\n    hasToggle: {\n      type: Boolean,\n      description: \"Whether dropdown has arrow icon shown\",\n      default: true,\n    },\n  },\n  data() {\n    return {\n      isOpen: false,\n    };\n  },\n  methods: {\n    toggleDropDown() {\n      this.isOpen = !this.isOpen;\n      this.$emit(\"change\", this.isOpen);\n      // event.stopPropagation();\n      // let dropdowns = document.querySelectorAll('.dropdown-menu');\n      // for(var i=0; i<dropdowns.length; i++){\n      //   console.log(dropdowns[i].classList);\n      //   dropdowns[i].classList.remove('show');\n      // }\n    },\n    closeDropDown() {\n      this.isOpen = false;\n      this.$emit(\"change\", false);\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.dropdown {\n  cursor: pointer;\n  user-select: none;\n}\n</style>\n"]}]}