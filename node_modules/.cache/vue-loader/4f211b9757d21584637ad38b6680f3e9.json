{"remainingRequest":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\pc\\vue\\e-metro\\src\\components\\masterProducts\\schemes\\_list.vue?vue&type=style&index=0&id=818bec7a&lang=css","dependencies":[{"path":"C:\\Users\\pc\\vue\\e-metro\\src\\components\\masterProducts\\schemes\\_list.vue","mtime":1636979558562},{"path":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5uby1ib3JkZXItY2FyZCAuY2FyZC1mb290ZXIgewogIGJvcmRlci10b3A6IDA7Cn0K"},{"version":3,"sources":["C:\\Users\\pc\\vue\\e-metro\\src\\components\\masterProducts\\schemes\\_list.vue"],"names":[],"mappings":";AA4NA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACf","file":"C:/Users/pc/vue/e-metro/src/components/masterProducts/schemes/_list.vue","sourceRoot":"","sourcesContent":["<template>\n\n        <card\n          class=\"no-border-card\"\n          body-classes=\"px-0 pb-1 py-3\"\n          footer-classes=\"pb-2\"\n        >\n            <form>\n            <div class=\"row px-2\">\n              <div class=\"col-3 pr-0 form-group\">\n                <div class=\"d-flex\">\n                  <label class=\"mt-2 px-1\">From:</label>\n                  <input type=\"date\" class=\"form-control\" placeholder=\"from\" v-model=\"form.startDate\">\n                </div>\n              </div>\n              <div class=\"col-3 pr-0 form-group\">\n                <div class=\"d-flex\">\n                  <label class=\"mt-2 px-1\">To:</label>\n                  <input type=\"date\" class=\"form-control\" placeholder=\"to\" v-model=\"form.endDate\" @mouseout=\"fetchSchemes\">\n                </div>\n              </div>\n              <div class=\"col-2 pr-0\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Scheme Id\"\n                  class=\"form-control\"\n                  v-model=\"form.schemaNumber\"\n                />\n              </div>\n              <div class=\"col-1 pr-0\">\n                <button\n                  class=\"btn base-button btn-default\"\n                  type=\"button\"\n                  @click=\"fetchSchemes\"\n                >\n                  search\n                </button>\n              </div>\n              <div class=\"col-1 pl-4\">\n                <button\n                  class=\"btn base-button btn-default\"\n                  type=\"button\"\n                  @click=\"resetForm\"\n                >\n                  reset\n                </button>\n              </div>\n            </div>\n          </form>\n\n            <div class=\"pl-0\" v-if=\"visibleScheme\">\n              <Table>\n                <template #thead>\n                  <tr>\n                    <th>Sr No</th>\n                    <th>ID</th>\n                    <th>Scheme No</th>\n                    <th>Scheme Name</th>\n                    <th>Date</th>\n                    <th>EAN Code</th>\n                    <th>Product Name</th>\n                    <th>Quantity</th>\n                    <th>UOM</th>\n                    <th>Free Quantity</th>\n                    <th>Discount</th>\n                    <th>Net PTR</th>\n                    <th>Narration</th>\n                    <th>Validity</th>\n                    <th>Active</th>\n                    <th>Action</th>\n\n                  </tr>\n\n                </template>\n                <template #tbody>\n                  <tr v-for=\"(data,index) in schemeData\" :key=\"data._id\">\n                    <td>{{index+1}}</td>\n                    <td>{{data._id}}</td>\n                    <td>{{ data.schemaNumber }}</td>\n                    <td>{{ data.schemaName }}</td>\n                    <td>{{ data.date }}</td>\n                    <td>{{ data.EANCode }}</td>\n                    <td>{{ data.productName }}</td>\n                    <td>{{ data.quantity }}</td>\n                    <td>{{ data.UOM }}</td>\n                    <td>{{ data.freeQuantity }}</td>\n                    <td>{{ data.discount }}</td>\n                    <td>{{ data.netPTR }}</td>\n                    <td>{{ data.nararation }}</td>\n                    <td>{{ data.validity }}</td>\n                    <td>{{ data.active }}</td>\n                    <td>\n                      <div class=\"\">\n                        <router-link :to=\"{name:'SchemesEdit',params: { id: data._id}}\">\n                          <button type=\"button\"\n                                  class=\"btn base-button btn-icon btn-fab btn btn-default btn-sm edit\">\n                            <i class=\"text-white ni ni-ruler-pencil\"></i>\n                          </button>\n                        </router-link>\n                        <button type=\"button\"\n                                class=\"btn base-button btn-icon btn-fab btn-danger btn-sm remove btn-link\"\n                                @click.prevent=\"destroy(data._id)\"\n                        >\n                          <i class=\"text-white ni ni-fat-remove\"></i>\n\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n\n                </template>\n              </Table>\n            </div>\n            <div v-if=\"visibleScheme==false\" class=\"text-center mt-4\">\n                Data not found\n            </div>\n          <template v-slot:footer>\n            <div\n              class=\"col-12 d-flex justify-content-center justify-content-sm-between flex-wrap\"\n            >\n              <div class=\"\">\n                <p class=\"card-category\">\n                  Showing {{ from + 1 }} to {{ to }} of {{ total }} entries\n                </p>\n              </div>\n              <base-pagination\n                class=\"pagination-no-border\"\n                v-model=\"pagination.currentPage\"\n                :per-page=\"pagination.perPage\"\n                :total=\"total\"\n              >\n              </base-pagination>\n            </div>\n          </template>\n        </card>\n\n</template>\n<script>\n\n\nimport BasePagination from \"@/components/BasePagination\";\nimport axios from 'axios';\n\nexport default {\n  components: {\n    BasePagination,\n  },\n  computed: {\n\n  },\n  data() {\n    return {\n      visibleScheme:false,\n      form:{\n        startDate:'',\n        endDate:'',\n        schemaNumber:'',\n      },\n\n      pagination: {\n        perPage: 10,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0,\n      },\n      schemeData:[],\n      confirmModal: false,\n      deleting: null,\n    };\n  },\n  mounted() {\n    this.fetchSchemes();\n  },\n  methods: {\n    fetchSchemes(){\n\n      axios.get(`api/schema/get`,{\n        params:{\n          startDate: this.form.startDate,\n          endDate: this.form.endDate,\n          schemaNumber:this.form.schemaNumber\n        }\n      })\n      .then(response=>{\n        this.schemeData=response.data;\n        this.visibleScheme=true;\n      })\n      .catch(error=>{\n        console.log(error);\n        this.visibleScheme=false\n      });\n\n    },\n\n    resetForm(){\n      this.form={}\n      this.fetchSchemes();\n\n    },\n\n    confirmDelete(type) {\n      this.confirmModal = true;\n      this.deleting = type;\n    },\n    destroy(id) {\n      axios.delete(`api/schema/delete/`+id)\n        .then(response => {\n          console.log(response);\n          this.fetchSchemes();\n          this.deleting = null;\n        });\n    },\n\n    selectionChange(selectedRows) {\n      this.selectedRows = selectedRows;\n    },\n  },\n};\n</script>\n<style>\n.no-border-card .card-footer {\n  border-top: 0;\n}\n</style>\n"]}]}