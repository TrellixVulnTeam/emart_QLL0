{"remainingRequest":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\pc\\vue\\e-metro\\src\\components\\masterProducts\\schemes\\_list.vue?vue&type=style&index=0&id=818bec7a&lang=css","dependencies":[{"path":"C:\\Users\\pc\\vue\\e-metro\\src\\components\\masterProducts\\schemes\\_list.vue","mtime":1636693884459},{"path":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5uby1ib3JkZXItY2FyZCAuY2FyZC1mb290ZXIgewogIGJvcmRlci10b3A6IDA7Cn0K"},{"version":3,"sources":["C:\\Users\\pc\\vue\\e-metro\\src\\components\\masterProducts\\schemes\\_list.vue"],"names":[],"mappings":";AAoVA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACf","file":"C:/Users/pc/vue/e-metro/src/components/masterProducts/schemes/_list.vue","sourceRoot":"","sourcesContent":["<template>\n\n        <card\n          class=\"no-border-card\"\n          body-classes=\"px-0 pb-1 py-3\"\n          footer-classes=\"pb-2\"\n        >\n\n            <div class=\"row px-4\">\n              <label class=\"mt-2\">Filter:</label>\n              <div class=\"col-2 pr-0 form-group\">\n\n                <flat-picker\n                  :config=\"{ allowInput: true, mode: 'range' }\"\n                  class=\"form-control datepicker\"\n                  v-model=\"date\"\n                >\n                </flat-picker>\n\n              </div>\n              <div class=\"col-2 pr-0\">\n                <base-input\n                  type=\"search\"\n                  clearable\n                  placeholder=\"Scheme Id\"\n                  v-model=\"searchQuery\"\n                  aria-controls=\"datatables\"\n                >\n                </base-input>\n              </div>\n            </div>\n\n            <div class=\"pl-0\">\n<!--              <el-table\n                :data=\"schemeData\"\n                row-key=\"id\"\n                header-row-class-name=\"thead-light\"\n                @selection-change=\"selectionChange\"\n              >\n                <el-table-column  min-width=\"100\" prop=\"index\" label=\"Sr No\"></el-table-column>\n                <el-table-column min-width=\"150\" prop=\"schemaNumber\"\n                                 label=\"Scheme No\">\n                </el-table-column>\n                <el-table-column min-width=\"150\" prop=\"schemaName\"\n                                 label=\"Scheme Name\">\n                </el-table-column>\n                <el-table-column min-width=\"120\" prop=\"date\"\n                                 label=\"Date\">\n                </el-table-column>\n                <el-table-column min-width=\"150\" prop=\"EANCode\"\n                                 label=\"EAN Code\">\n                </el-table-column>\n                <el-table-column min-width=\"150\" prop=\"productName\"\n                                 label=\"Product Name\">\n                </el-table-column>\n                <el-table-column min-width=\"150\" prop=\"quantity\"\n                                 label=\"Quantity\">\n                </el-table-column>\n                <el-table-column min-width=\"150\" prop=\"UOM\"\n                                 label=\"UOM\">\n                </el-table-column>\n                <el-table-column min-width=\"150\" prop=\"freeQuantity\"\n                                 label=\"Free Quantity\">\n                </el-table-column>\n                <el-table-column min-width=\"150\" prop=\"discount\"\n                                 label=\"Discount\">\n                </el-table-column>\n                <el-table-column min-width=\"150\" prop=\"netPTR\"\n                                 label=\"Net PTR\">\n                </el-table-column>\n                <el-table-column min-width=\"150\" prop=\"nararation\"\n                                                    label=\"Narration\">\n                </el-table-column>\n                <el-table-column min-width=\"150\" prop=\"validity\"\n                                 label=\"Validity\">\n                </el-table-column>\n                <el-table-column min-width=\"150\" prop=\"active\"\n                                 label=\"Active\">\n                </el-table-column>\n                <el-table-column min-width=\"180px\" align=\"right\" label=\"Actions\">\n                  <template v-slot:default=\"props\">\n                    <div class=\"d-flex\">\n                      <base-button\n                        @click=\"handleEdit(props.$index, props.row)\"\n                        class=\"edit\"\n                        type=\"warning\"\n                        size=\"sm\"\n                        icon\n                      >\n                        <i class=\"text-white ni ni-ruler-pencil\"></i>\n                      </base-button>\n                      <base-button\n                        @click=\"handleDelete(props.$index, props.row)\"\n                        class=\"remove btn-link\"\n                        type=\"danger\"\n                        size=\"sm\"\n                        icon\n                      >\n                        <i class=\"text-white ni ni-fat-remove\"></i>\n                      </base-button>\n                    </div>\n                  </template>\n                </el-table-column>\n              </el-table>-->\n              <Table>\n                <template #thead>\n                  <tr>\n                    <th>Sr No</th>\n                    <th>ID</th>\n                    <th>Scheme No</th>\n                    <th>Scheme Name</th>\n                    <th>Date</th>\n                    <th>EAN Code</th>\n                    <th>Product Name</th>\n                    <th>Quantity</th>\n                    <th>UOM</th>\n                    <th>Free Quantity</th>\n                    <th>Discount</th>\n                    <th>Net PTR</th>\n                    <th>Narration</th>\n                    <th>Validity</th>\n                    <th>Active</th>\n                    <th>Action</th>\n\n                  </tr>\n\n                </template>\n                <template #tbody>\n                  <tr v-for=\"(data,index) in schemeData\" :key=\"data._id\">\n                    <td>{{index+1}}</td>\n                    <td>{{data._id}}</td>\n                    <td>{{ data.schemaNumber }}</td>\n                    <td>{{ data.schemaName }}</td>\n                    <td>{{ data.date }}</td>\n                    <td>{{ data.EANCode }}</td>\n                    <td>{{ data.productName }}</td>\n                    <td>{{ data.quantity }}</td>\n                    <td>{{ data.UOM }}</td>\n                    <td>{{ data.freeQuantity }}</td>\n                    <td>{{ data.discount }}</td>\n                    <td>{{ data.netPTR }}</td>\n                    <td>{{ data.nararation }}</td>\n                    <td>{{ data.validity }}</td>\n                    <td>{{ data.active }}</td>\n                    <td>\n                      <div class=\"\">\n                        <router-link :to=\"{name:'SchemesEdit',params: { id: data._id}}\">\n                          <button type=\"button\"\n                                  class=\"btn base-button btn-icon btn-fab btn btn-default btn-sm edit\">\n                            <i class=\"text-white ni ni-ruler-pencil\"></i>\n                          </button>\n                        </router-link>\n                        <button type=\"button\"\n                                class=\"btn base-button btn-icon btn-fab btn-danger btn-sm remove btn-link\"\n                                @click.prevent=\"destroy(data._id)\"\n                        >\n                          <i class=\"text-white ni ni-fat-remove\"></i>\n\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n\n                </template>\n              </Table>\n            </div>\n<!--          <ConfirmModal v-model=\"confirmModal\"\n                        :title=\"('Delete Category',\n                        { model_name: 'Category',model:('Category')})\"\n                        :description=\"('Are you sure you want to delete this record?')\"\n                        :confirm-text=\"('Delete It!')\"\n                        @confirmed=\"destroy\"\n          ></ConfirmModal>-->\n          <template v-slot:footer>\n            <div\n              class=\"col-12 d-flex justify-content-center justify-content-sm-between flex-wrap\"\n            >\n              <div class=\"\">\n                <p class=\"card-category\">\n                  Showing {{ from + 1 }} to {{ to }} of {{ total }} entries\n                </p>\n              </div>\n              <base-pagination\n                class=\"pagination-no-border\"\n                v-model=\"pagination.currentPage\"\n                :per-page=\"pagination.perPage\"\n                :total=\"total\"\n              >\n              </base-pagination>\n            </div>\n          </template>\n        </card>\n\n</template>\n<script>\nimport {\n  ElTable,\n  ElTableColumn,\n  ElSelect,\n  ElOption,\n  ElInput,\n} from \"element-plus\";\nimport flatPicker from \"vue-flatpickr-component\";\nimport 'flatpickr/dist/flatpickr.css';\n\nimport BasePagination from \"@/components/BasePagination\";\n//import swal from \"sweetalert2\";\nimport users from \"../../../views/Tables/users2\";\nimport axios from 'axios';\n\nexport default {\n  components: {\n    BasePagination,\n    flatPicker,\n    [ElSelect.name]: ElSelect,\n    [ElOption.name]: ElOption,\n    [ElTable.name]: ElTable,\n    [ElInput.name]: ElInput,\n    [ElTableColumn.name]: ElTableColumn,\n  },\n  computed: {\n    pagedData() {\n      return this.tableData.slice(this.from, this.to);\n    },\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n\n    to() {\n      let highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total() {\n      return this.searchedData.length > 0\n        ? this.searchedData.length\n        : this.tableData.length;\n    },\n  },\n  data() {\n    return {\n      date:'2021-11-12 to 2021-11-19',\n      pagination: {\n        perPage: 10,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0,\n      },\n      propsToSearch: [\"name\", \"email\"],\n      tableData: users,\n      fuseSearch: null,\n      searchedData: [],\n      schemeData:[],\n      confirmModal: false,\n      deleting: null,\n    };\n  },\n  mounted() {\n    this.fetchSchemes();\n  },\n  methods: {\n    fetchSchemes(){\n      axios.get(\"https://vuecrud78.herokuapp.com/api/schema/get\")\n      .then(response=>{\n        this.schemeData=response.data;\n        console.log(this.schemeData);\n      });\n    },\n    confirmDelete(type) {\n      this.confirmModal = true;\n      this.deleting = type;\n    },\n    destroy(id) {\n      axios.delete(`https://vuecrud78.herokuapp.com/api/schema/delete/`+id)\n        .then(response => {\n          console.log(response);\n          this.fetchSchemes();\n          this.deleting = null;\n        });\n    },\n   /* handleEdit(index, row) {\n      const swalWithBootstrapButtons2 = swal.mixin({\n        customClass: {\n          confirmButton: \"btn btn-info btn-fill\",\n        },\n        buttonsStyling: false,\n      });\n\n      swalWithBootstrapButtons2.fire({\n        title: `You want to edit ${row.name}`,\n      });\n    },*/\n    /*handleDelete(index, row) {\n      const swalWithBootstrapButtons3 = swal.mixin({\n        customClass: {\n          confirmButton: \"btn btn-success btn-fill\",\n          cancelButton: \"btn btn-danger btn-fill\",\n        },\n        buttonsStyling: false,\n      });\n      swalWithBootstrapButtons3\n        .fire({\n          title: \"Are you sure?\",\n          text: `You won't be able to revert this!`,\n          showCancelButton: true,\n          confirmButtonText: \"Yes, delete it!\",\n        })\n        .then((result) => {\n          if (result.value) {\n            this.deleteRow(row);\n            swalWithBootstrapButtons3.fire({\n              title: \"Deleted!\",\n              text: `You deleted ${row.name}`,\n            });\n          }\n        });\n    },\n    deleteRow(row) {\n      let indexToDelete = this.tableData.findIndex(\n        (tableRow) => tableRow.id === row.id\n      );\n      if (indexToDelete >= 0) {\n        this.tableData.splice(indexToDelete, 1);\n      }\n    },*/\n    selectionChange(selectedRows) {\n      this.selectedRows = selectedRows;\n    },\n  },\n};\n</script>\n<style>\n.no-border-card .card-footer {\n  border-top: 0;\n}\n</style>\n"]}]}