{"remainingRequest":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pc\\vue\\e-metro\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\pc\\vue\\e-metro\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\pc\\vue\\e-metro\\node_modules\\vue-excel-export\\VueComment.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\vue-excel-export\\VueComment.vue","mtime":499162500000},{"path":"C:\\Users\\pc\\vue\\e-metro\\babel.config.js","mtime":1614941550000},{"path":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pc\\vue\\e-metro\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\pc\\vue\\e-metro\\node_modules\\vue-excel-export\\VueComment.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div\n            :id=\"idName\"\n            @click=\"generate\">\n        <slot>\n            Download {{name}}\n        </slot>\n    </div>\n</template>\n\n<script>\n    import download from \"browser-downloads\";\n\n    export default {\n        name: 'export-excel',\n        props: {\n            // mime type [xls, csv]\n            type: {\n                type: String,\n                default: \"xls\"\n            },\n            // Json to download\n            data: {\n                type: Array,\n                required: false,\n                default: null\n            },\n            // fields inside the Json Object that you want to export\n            // if no given, all the properties in the Json are exported\n            fields: {\n                type: Object,\n                required: false\n            },\n            // this prop is used to fix the problem with other components that use the\n            // variable fields, like vee-validate. exportFields works exactly like fields\n            exportFields: {\n                type: Object,\n                required: false\n            },\n            // Use as fallback when the row has no field values\n            defaultValue: {\n                type: String,\n                required: false,\n                default: \"\"\n            },\n            // Title(s) for the data, could be a string or an array of strings (multiple titles)\n            title: {\n                default: null\n            },\n            // Footer(s) for the data, could be a string or an array of strings (multiple footers)\n            footer: {\n                default: null\n            },\n            // filename to export\n            name: {\n                type: String,\n                default: \"data.xls\"\n            },\n            fetch: {\n                type: Function,\n            },\n            meta: {\n                type: Array,\n                default: () => []\n            },\n            worksheet: {\n                type: String,\n                default: \"Sheet1\"\n            },\n            //event before generate was called\n            beforeGenerate: {\n                type: Function,\n            },\n            //event before download pops up\n            beforeFinish: {\n                type: Function,\n            },\n        },\n        computed: {\n            // unique identifier\n            idName() {\n                var now = new Date().getTime();\n                return \"export_\" + now;\n            },\n\n            downloadFields() {\n                if (this.fields !== undefined) return this.fields;\n\n                if (this.exportFields !== undefined) return this.exportFields;\n            }\n        },\n        methods: {\n            async generate() {\n                if (typeof this.beforeGenerate === 'function') {\n                    await this.beforeGenerate();\n                }\n                let data = this.data;\n                if (typeof this.fetch === 'function' || !data)\n                    data = await this.fetch();\n\n                if (!data || !data.length) {\n                    return;\n                }\n\n                let json = this.getProcessedJson(data, this.downloadFields);\n                if (this.type === \"html\") {\n                    // this is mainly for testing\n                    return this.export(\n                        this.jsonToXLS(json),\n                        this.name.replace(\".xls\", \".html\"),\n                        \"text/html\"\n                    );\n                } else if (this.type === \"csv\") {\n                    return this.export(\n                        this.jsonToCSV(json),\n                        this.name.replace(\".xls\", \".csv\"),\n                        \"application/csv\"\n                    );\n                }\n                return this.export(\n                    this.jsonToXLS(json),\n                    this.name,\n                    \"application/vnd.ms-excel\"\n                );\n            },\n            /*\n                Use downloadjs to generate the download link\n                */\n            export: async function (data, filename, mime) {\n                let blob = this.base64ToBlob(data, mime);\n                if (typeof this.beforeFinish === 'function')\n                    await this.beforeFinish();\n                download(blob, filename, mime);\n            },\n            /*\n                jsonToXLS\n                ---------------\n                Transform json data into an xml document with MS Excel format, sadly\n                it shows a prompt when it opens, that is a default behavior for\n                Microsoft office and cannot be avoided. It's recommended to use CSV format instead.\n                */\n            jsonToXLS(data) {\n                let xlsTemp =\n                    '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta name=ProgId content=Excel.Sheet> <meta name=Generator content=\"Microsoft Excel 11\"><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>${worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--><style>br {mso-data-placement: same-cell;}</style></head><body><table>${table}</table></body></html>';\n                let xlsData = \"<thead>\";\n                const colspan = Object.keys(data[0]).length;\n                let _self = this;\n\n                //Header\n                if (this.title != null) {\n                    xlsData += this.parseExtraData(\n                        this.title,\n                        '<tr><th colspan=\"' + colspan + '\">${data}</th></tr>'\n                    );\n                }\n\n                //Fields\n                xlsData += \"<tr>\";\n                for (let key in data[0]) {\n                    xlsData += \"<th>\" + key + \"</th>\";\n                }\n                xlsData += \"</tr>\";\n                xlsData += \"</thead>\";\n\n                //Data\n                xlsData += \"<tbody>\";\n                data.map(function (item, index) {\n                    xlsData += \"<tr>\";\n                    for (let key in item) {\n                        xlsData += \"<td>\" + _self.valueReformattedForMultilines(item[key]) + \"</td>\";\n                    }\n                    xlsData += \"</tr>\";\n                });\n                xlsData += \"</tbody>\";\n\n                //Footer\n                if (this.footer != null) {\n                    xlsData += \"<tfoot>\";\n                    xlsData += this.parseExtraData(\n                        this.footer,\n                        '<tr><td colspan=\"' + colspan + '\">${data}</td></tr>'\n                    );\n                    xlsData += \"</tfoot>\";\n                }\n\n                return xlsTemp.replace(\"${table}\", xlsData).replace(\"${worksheet}\", this.worksheet);\n            },\n            /*\n                jsonToCSV\n                ---------------\n                Transform json data into an CSV file.\n                */\n            jsonToCSV(data) {\n                var csvData = [];\n                //Header\n                if (this.title != null) {\n                    csvData.push(this.parseExtraData(this.title, \"${data}\\r\\n\"));\n                }\n                //Fields\n                for (let key in data[0]) {\n                    csvData.push(key);\n                    csvData.push(\",\");\n                }\n                csvData.pop();\n                csvData.push(\"\\r\\n\");\n                //Data\n                data.map(function (item) {\n                    for (let key in item) {\n                        let escapedCSV = '=\\\"' + item[key] + '\\\"'; // cast Numbers to string\n                        if (escapedCSV.match(/[,\"\\n]/)) {\n                            escapedCSV = '\"' + escapedCSV.replace(/\\\"/g, '\"\"') + '\"';\n                        }\n                        csvData.push(escapedCSV);\n                        csvData.push(\",\");\n                    }\n                    csvData.pop();\n                    csvData.push(\"\\r\\n\");\n                });\n                //Footer\n                if (this.footer != null) {\n                    csvData.push(this.parseExtraData(this.footer, \"${data}\\r\\n\"));\n                }\n                return csvData.join(\"\");\n            },\n            /*\n                getProcessedJson\n                ---------------\n                Get only the data to export, if no fields are set return all the data\n                */\n            getProcessedJson(data, header) {\n                let keys = this.getKeys(data, header);\n                let newData = [];\n                let _self = this;\n                data.map(function (item, index) {\n                    let newItem = {};\n                    for (let label in keys) {\n                        let property = keys[label];\n                        newItem[label] = _self.getValue(property, item);\n                    }\n                    newData.push(newItem);\n                });\n\n                return newData;\n            },\n            getKeys(data, header) {\n                if (header) {\n                    return header;\n                }\n\n                let keys = {};\n                for (let key in data[0]) {\n                    keys[key] = key;\n                }\n                return keys;\n            },\n            /*\n                parseExtraData\n                ---------------\n                Parse title and footer attribute to the csv format\n                */\n            parseExtraData(extraData, format) {\n                let parseData = \"\";\n                if (Array.isArray(extraData)) {\n                    for (var i = 0; i < extraData.length; i++) {\n                        parseData += format.replace(\"${data}\", extraData[i]);\n                    }\n                } else {\n                    parseData += format.replace(\"${data}\", extraData);\n                }\n                return parseData;\n            },\n\n            getValue(key, item) {\n                const field = typeof key !== \"object\" ? key : key.field;\n                let indexes = typeof field !== \"string\" ? [] : field.split(\".\");\n                let value = this.defaultValue;\n\n                if (!field)\n                    value = item;\n                else if (indexes.length > 1)\n                    value = this.getValueFromNestedItem(item, indexes);\n                else\n                    value = this.parseValue(item[field]);\n\n                if (key.hasOwnProperty('callback'))\n                    value = this.getValueFromCallback(value, key.callback);\n\n                return value;\n            },\n\n            /*\n            convert values with newline \\n characters into <br/>\n            */\n            valueReformattedForMultilines(value) {\n                if (typeof (value) == \"string\") return (value.replace(/\\n/ig, \"<br/>\"));\n                else return (value);\n            },\n\n            getValueFromNestedItem(item, indexes) {\n                let nestedItem = item;\n                for (let index of indexes) {\n                    if (nestedItem)\n                        nestedItem = nestedItem[index];\n                }\n                return this.parseValue(nestedItem);\n            },\n\n            getValueFromCallback(item, callback) {\n                if (typeof callback !== \"function\")\n                    return this.defaultValue\n                const value = callback(item);\n                return this.parseValue(value);\n            },\n            parseValue(value) {\n                return value || value === 0 || typeof value === 'boolean'\n                    ? value\n                    : this.defaultValue;\n            },\n            base64ToBlob(data, mime) {\n                let base64 = window.btoa(window.unescape(encodeURIComponent(data)));\n                let bstr = atob(base64);\n                let n = bstr.length;\n                let u8arr = new Uint8ClampedArray(n);\n                while (n--) {\n                    u8arr[n] = bstr.charCodeAt(n);\n                }\n                return new Blob([u8arr], {type: mime});\n            }\n        } // end methods\n    };\n</script>\n"],"sourceRoot":""}]}